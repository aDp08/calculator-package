name: Publish Python Package

on:
  push:
    branches:
      - main  # Runs when code is pushed to 'main' branch

jobs:
  build:
    runs-on: windows-latest  # Running on Windows

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry

      - name: Verify Python & Poetry Installation
        run: |
          python --version
          poetry --version

      - name: Get Python Executable Path
        id: python-path
        run: echo "PYTHON_EXEC=$(python -c 'import sys; print(sys.executable)')" >> $GITHUB_ENV
        shell: bash

      - name: Remove Existing Poetry Virtual Environment (if any)
        run: poetry env remove python || echo "No existing virtual environment found"
        continue-on-error: true

      - name: Use Correct Python Executable in Poetry
        run: poetry env use "$PYTHON_EXEC"
        shell: bash

      - name: Install Dependencies
        run: poetry install --no-interaction --no-root
        shell: bash

      - name: Run Tests
        run: poetry run pytest
        env:
          PYTHONPATH: ${{ github.workspace }}

      - name: Build Package
        run: poetry build

      - name: Publish to PyPI
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
        run: poetry publish --no-interaction
